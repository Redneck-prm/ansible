---
- name: create mysql instances on k8s-db1
  hosts: dball
  vars_files:
    - vars.yaml

  tasks:
#    - debug: var=ansible_facts

    - set_fact: 
        lvm_name="mysql_{{ instance }}"
        lvm_log_name="mysql_{{ instance }}_log"
        lvm_size_int="{{lvm_size | regex_replace('g', '') }}"
        lvm_log_size_int="{{lvm_log_size | regex_replace('g', '') }}"
        mount_path="/var/lib/mysql_{{ instance }}"
        log_mount_path="/var/log/mysql_{{ instance }}"
        


# определяем, существует ли такая vg 
# на выходе булева переменная vg_exists

    - name: is vg exists
      set_fact: 
        vg_exists=true
        vg_free={{item.value.free_g}}
      loop: "{{ query('dict', ansible_lvm.vgs|default({})) }}"
      when: item.key == vg

    - set_fact: vg_exists=false
      when: vg_exists is undefined

# определяем, существует ли lvm 
    - name: is lvm exists
      set_fact: lvm_exists=true
      loop: "{{ query('dict', ansible_lvm.lvs|default({})) }}"
      when: item.key == lvm_name

    - set_fact: lvm_exists=false
      when: lvm_exists is undefined

# определяем, существует ли log lvm 
    - name: is log lvm exists
      set_fact: lvm_log_exists=true
      loop: "{{ query('dict', ansible_lvm.lvs|default({})) }}"
      when: item.key == lvm_log_name

    - set_fact: lvm_log_exists=false
      when: lvm_log_exists is undefined

# проверяем свободное место
    - name: is vg have free space
      set_fact: vg_free_enough={{ vg_free|float - lvm_size_int|float - lvm_log_size_int|float >= 1 }}
      when: vg_exists == true


# проверяем наличие маунтов 

    - name: check maunts exists
      set_fact: mount_exists=true
      loop: "{{ ansible_mounts }}"
      when: item.mount == mount_path

    - set_fact: mount_exists=false
      when: mount_exists is undefined

    - name: check log mount exists
      set_fact: log_mount_exists=true
      loop: "{{ ansible_mounts }}"
      when: item.mount == log_mount_path

    - set_fact: log_mount_exists=false
      when: log_mount_exists is undefined

# проверяем, есть ли файл сервиса systemd

    - name: Check /etc/systemd/system/${instance}-mysql.service exists
      stat:
        path: "/etc/systemd/system/{{ instance }}-mysql.service"
      register: service_file_result

    - set_fact: service_file_exists=true
      when: service_file_result.stat.exists

    - set_fact: service_file_exists=false
      when: service_file_exists is undefined

# проверяем наличие startup скрипта 

    - name: Check /usr/local/bin/${instance}-mysql exists
      stat:
        path: "/usr/local/bin/{{ instance }}-mysql"
      register: startup_file_result

    - set_fact: startup_file_exists=true
      when: startup_file_result.stat.exists

    - set_fact: startup_file_exists=false
      when: startup_file_exists is undefined

# проверяем, свободен ли порт 
    - name: check ports in docker ps
      shell: "docker ps"
      register: docker_ps

    # костыль для прогона dry run, ибо в нем команды шелл не выполняются
    - set_fact: 
        docker_ps:
          stdout: "test"
      when: docker_ps.stdout is undefined

    - set_fact: mysql_port_str={{ mysql_port | string }}
   
    - set_fact: port_is_free=true
      when: mysql_port_str not in docker_ps.stdout

# дополнительная проверка, на случай, если инстанс с портом существует
# но временно выключен

    - name: check ports in cat /usr/local/bin/*-mysql
      shell: "cat /usr/local/bin/*-mysql"
      register: cat_startup_scripts
      ignore_errors: True

    # костыль для прогона dry run, ибо в нем команды шелл не выполняются
    - set_fact: 
        cat_startup_scripts: 
          stdout: "test"
      when: cat_startup_scripts.stdout is undefined

    - set_fact: port_is_free=true
      when: mysql_port_str not in cat_startup_scripts.stdout

    - set_fact: port_is_free=false
      when: port_is_free is undefined

    - debug: msg="vg_exists {{vg_exists}} vg_free_enough {{vg_free_enough}} lvm_exists {{lvm_exists}} lvm_log_exists {{lvm_log_exists}} port_is_free {{port_is_free}}"
    - debug: msg="mount_exists {{mount_exists}} log_mount_exists {{log_mount_exists}} service_file_exists {{service_file_exists}} startup_file_exists {{startup_file_exists}}"

# выставляем финальный разрешающий факт
    - name: set final check fact
      set_fact: all_checks_pass=false

    - set_fact: all_checks_pass=true
      when: 
        - vg_exists == true
        - vg_free_enough == true
        - lvm_exists == false
        - lvm_log_exists == false
        - mount_exists == false
        - log_mount_exists == false
        - service_file_exists == false
        - startup_file_exists == false
        - port_is_free == true

    - include_tasks: include/create_instance.yaml
      when: all_checks_pass == true

    - include_tasks: include/create_staff.yaml
      when: all_checks_pass == true

    - name: wait for mysql port on 127.0.0.1
      wait_for:
        host: 127.0.0.1
        port: "{{ mysql_port }}"
      when: all_checks_pass == true

    - name: wait 120 seconds
      wait_for:
        timeout: 120
      when: all_checks_pass == true

    - include_tasks: include/mysql_init.yaml
      when: all_checks_pass == true
